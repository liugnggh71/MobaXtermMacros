<?xml version="1.0" encoding="UTF-8"?>
<macro xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="../MobaMacro.xsd">
   <name>PWD_CreateGenPassword</name>
   <desc>Full code file: PWD_CreateGenPassword.sql</desc>
   <environment>SQLPlus</environment>
   <hotkey>0</hotkey>
   <line type="Text">desc DBSNMP.GenPassword</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">CREATE OR REPLACE FUNCTION DBSNMP.GenPassword (</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  i_chars_chr PLS_INTEGER DEFAULT 5,</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  i_chars_num PLS_INTEGER DEFAULT 2,</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  i_chars_spc PLS_INTEGER DEFAULT 1</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">) RETURN VARCHAR2</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">IS</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- GenPassword - Generate a reasonable secure password</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  --</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- Parameter:</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- i_chars_chr : number of alpha characters in the password</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- i_chars_num : number of numeric characters in the password</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- i_chars_spc : number of special characters in the password</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  --</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- Valid ranges are between 0 and 20 for every input parameter.</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- Characters that get easily mixed up ('1' and 'l' or 'I',</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- '0' and 'O', ...) are left out.</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  --</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- Example usage:</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- SQL&gt; select genpassword() from dual;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  --</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- GENPASSWORD()</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- ------------------------------------</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- MXbjA6%4</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  --</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  l_chr VARCHAR2(60) := 'abcdefhijkmnoprstuvwxyzABCDEFGHIJKLMNPQRSTUVWXYZ';</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  l_num VARCHAR2(60) := '0123456789';</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  l_spc VARCHAR2(60) := '!#$%()*+,-:;&lt;=&gt;?_';</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  --</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  l_pwd VARCHAR2(60) := '';</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  l_sel VARCHAR2(60) := '';</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">BEGIN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  --</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- Raise an error if the input is out of sensible bounds</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  --</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  IF (i_chars_chr NOT BETWEEN 0 AND 20) OR</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">     (i_chars_num NOT BETWEEN 0 AND 20) OR</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">     (i_chars_spc NOT BETWEEN 0 AND 20) THEN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">    RAISE value_error;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  END IF;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  --</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  l_sel := l_sel||rpad('a', i_chars_chr, 'a');</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  l_sel := l_sel||rpad('n', i_chars_num, 'n');</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  l_sel := l_sel||rpad('s', i_chars_spc, 's');</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  --</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- Loop over selector in random order and build the password by</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- choosing a random character from the class denoted by the</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  -- selector.</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  --</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  FOR rec IN (SELECT level</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">                FROM dual</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">             CONNECT BY level &lt;= length(l_sel)</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">               ORDER BY DBMS_RANDOM.value())</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  LOOP</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">    CASE substr(l_sel, rec.level, 1)</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      WHEN 'a' THEN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">        l_pwd := l_pwd||substr(l_chr, DBMS_RANDOM.value(1, length(l_chr)), 1);</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      WHEN 'n' THEN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">        l_pwd := l_pwd||substr(l_num, DBMS_RANDOM.value(1, length(l_num)), 1);</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      WHEN 's' THEN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">        l_pwd := l_pwd||substr(l_spc, DBMS_RANDOM.value(1, length(l_spc)), 1);</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      ELSE</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">        NULL;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">    END CASE;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  END LOOP;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  --</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">  RETURN l_pwd;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">END GenPassword;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">/</line>
   <line type="KeyPress">RETURN</line>
</macro>
