<?xml version="1.0" encoding="UTF-8"?>
<macro xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="../MobaMacro.xsd">
   <name>p_create_verify_password</name>
   <desc>Full code file: p_create_verify_password.sql</desc>
   <environment>SQLPlus</environment>
   <hotkey>0</hotkey>
   <line type="Text">set echo on</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem The password verify function template is in file $ORACLE_HOME/rdbms/admin/utlpwdmg.sql</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem Following code is a simplified one Gang Liu programmed based on the Oracle sample code</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem utlpwdmg.sql</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem Copyright (c) 2006, 2013, Oracle and/or its affiliates. </line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem All rights reserved. </line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem    NAME</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem      utlpwdmg.sql - script for Default Password Resource Limits</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem    DESCRIPTION</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem      This is a script for enabling the password management features</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem      by setting the default password resource limits.</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem    NOTES</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem      This file contains a function for minimum checking of password</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem      complexity. This is more of a sample function that the customer</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem      can use to develop the function for actual complexity checks that the </line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem      customer wants to make on the new password.</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">Rem</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">CREATE OR REPLACE FUNCTION SYS.verify_password (username        VARCHAR2,</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">                                                password        VARCHAR2,</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">                                                old_password    VARCHAR2)</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   RETURN BOOLEAN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">IS</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   m             INTEGER;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   differ        INTEGER;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   v_minlength   INTEGER := 10;                  /* minimum password length */</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   FUNCTION string_have_chars (p_string       IN VARCHAR2,</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">                               p_char_array   IN VARCHAR2)</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      RETURN BOOLEAN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   IS</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      V_RETURN   BOOLEAN := FALSE;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   BEGIN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      FOR i IN 1 .. LENGTH (p_char_array)</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      LOOP</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         FOR j IN 1 .. LENGTH (p_string)</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         LOOP</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">            IF SUBSTR (p_string, j, 1) = SUBSTR (p_char_array, i, 1)</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">            THEN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">               V_RETURN := TRUE;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">               RETURN V_RETURN;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">            END IF;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         END LOOP;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      END LOOP;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      RETURN V_RETURN;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   END;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">BEGIN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   -- Check for the minimum length of the password</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   IF LENGTH (password) &lt; v_minlength</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   THEN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      raise_application_error (-20002,</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">                               'Password length less than ' || v_minlength);</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   END IF;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   -- Check if the password contains at least one letter, one digit and one punctuation mark.</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   m := LENGTH (password);</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   IF    string_have_chars (password, '0123456789') = FALSE</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      OR string_have_chars (password, 'abcdefghijklmnopqrstuvwxyz') = FALSE</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      OR string_have_chars (password, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = FALSE</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      OR string_have_chars (password, '!"#$%&amp;()``*+,-/:;&lt;=&gt;?_') = FALSE</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   THEN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      raise_application_error (</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         -20003,</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         'Password should contain at least one digit, one lower character, one upper character and one punctuation');</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   END IF;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   -- Check if the password differs from the previous password by at least</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   -- 3 letters</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   IF old_password IS NOT NULL</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   THEN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      differ := LENGTH (old_password) - LENGTH (password);</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      IF ABS (differ) &lt; 3</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      THEN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         IF LENGTH (password) &lt; LENGTH (old_password)</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         THEN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">            m := LENGTH (password);</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         ELSE</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">            m := LENGTH (old_password);</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         END IF;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         differ := ABS (differ);</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         FOR i IN 1 .. m</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         LOOP</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">            IF SUBSTR (password, i, 1) != SUBSTR (old_password, i, 1)</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">            THEN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">               differ := differ + 1;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">            END IF;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         END LOOP;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         IF differ &lt; 3</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         THEN</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">            raise_application_error (-20004, 'Password should differ by at \</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         least 3 characters');</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">         END IF;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">      END IF;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   END IF;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   -- Everything is fine; return TRUE ;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">   RETURN (TRUE);</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">END;</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">/</line>
   <line type="KeyPress">RETURN</line>
   <line type="Text">desc verify_password</line>
   <line type="KeyPress">RETURN</line>
</macro>
